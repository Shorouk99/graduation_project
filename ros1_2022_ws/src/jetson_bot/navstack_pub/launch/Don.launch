<launch>

<!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="-0.06 0.05 0.3 0 0 0 base_link laser 10" />
  <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu_link 10" />
<!--Static Transformation Publisher-->
  <node pkg="tf" type="static_transform_publisher" name="camera_tf" args="0.18 0 0.045 0 0 0 base_link camera_link 10" />

  <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.09 0 0 0 base_footprint base_link 10" />


  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the AMCL -->
  <!-- node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 100" /-->
  <!--node pkg="tf" type="static_transform_publisher" name="odom_to_base_footprint" args="0 0 0 0 0 0 odom base_footprint 100" /-->



	
<!--node pkg="differential_drive" type="odom_source.py" name="diff_tf">
  </node-->




<!-- Extended Kalman Filter from robot_pose_ekf Node-->
  <!-- Subscribe: /odom, /imu_data, /vo -->
  <!-- Publish: /robot_pose_ekf/odom_combined -->
  <remap from="odom" to="odom_data_quat" />
  <!--remap from="odom" to="odom" /-->
  <remap from="imu_data" to="imu/data" />
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="base_footprint_frame" value="base_footprint"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="gps_used" value="false"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
  </node>
	



 

 
 
  
   
 
  
 <node pkg="localization_data_pub" type="ekf_odom_pub" name="ekf_odom_pub">
  
  <remap from="right_ticks" to="rwheel" />
  <remap from="left_ticks" to="lwheel" />

  </node> 
 
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM1"/>
    <param name="baud" value="115200"/>
  </node>

	<!--Launch rosserial node  for imu data-->
  <node pkg="mpu6050_serial_to_imu" type="mpu6050_serial_to_imu_node" name="mpu6050_serial_to_imu_node" required="true">
    <param name="port" value="/dev/ttyACM0"/>
		<param name="tf_parent_frame_id" value="base_link"/>
		<param name="tf_frame_id" value="imu_link"/>
		<param name="frame_id" value="imu_link"/>
		<param name="broadcast_tf" value="false"/>
		<param name="linear_acceleration_stddev" value="2.5e-05"/>
		<param name="angular_velocity_stddev" value="2.5e-05"/>
		<param name="orientation_stddev" value="0.0"/>
  </node>





<!-- Initial Pose and Goal Publisher -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <node pkg="rviz" type="rviz" name="rviz" args ='-d $(find navstack_pub)/rviz_config/bot_config.rviz'>
  </node> 

  
  <!-- Map File -->
  <arg name="map_file" default="$(find navstack_pub)/maps/new_main_map.yaml"/>
	
  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
	

  <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d --> 
  <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>




<!--                            AMCL.launch                   -->

  <include file="$(find navstack_pub)/launch/amcl.launch"/>



   

 <!--next is related to the deffrential drive-->
 



 <rosparam param="ticks_meter">2920</rosparam>

	<node pkg="differential_drive" type="twist_to_motors.py" name="twist_to_motors" output="screen">
		<rosparam param="base_width">0.29</rosparam>
		<rosparam param="rate">50</rosparam>
    <remap from="twist" to="/cmd_vel"/>
	</node>

	<!--<node pkg="differential_drive" type="diff_tf.py" name="diff_tf">
		<rosparam param="rate">10</rosparam>
		<rosparam param="base_width">0.29</rosparam>
	</node>-->

  <node pkg="differential_drive" type="vel_pid.py" name="motion_control">
	</node>

	<node pkg="differential_drive" type="pid_velocity.py" name="lpid_velocity">
		 <remap from="wheel" to="lwheel"/>
		 <remap from="motor_cmd" to="lmotor_cmd2"/>
		 <remap from="wheel_vtarget" to="lwheel_vtarget"/>
		 <remap from="wheel_vel" to="lwheel_vel"/>
		 <rosparam param="Kp">10</rosparam> <!--25 is perfect for now-->
		 <rosparam param="Ki">100</rosparam> <!--135 is perfect for now-->
		 <rosparam param="Kd">0.5</rosparam> <!--0.1 or 0.5-->
		 <rosparam param="out_min">-255</rosparam>
		 <rosparam param="out_max">255</rosparam>
		 <rosparam param="rate">7.0</rosparam>
		 <rosparam param="timeout_ticks">4</rosparam>
		 <rosparam param="rolling_pts">5</rosparam>
	</node>

	<node pkg="differential_drive" type="pid_velocity.py" name="rpid_velocity">
		 <remap from="wheel" to="rwheel"/>
		 <remap from="motor_cmd" to="rmotor_cmd2"/>
		 <remap from="wheel_vtarget" to="rwheel_vtarget"/>
		 <remap from="wheel_vel" to="rwheel_vel"/>
		 <rosparam param="Kp">10</rosparam> <!--10 is perfect for now-->
		 <rosparam param="Ki">100</rosparam> <!--100 is perfect for now-->
		 <rosparam param="Kd">0.5</rosparam>
		 <rosparam param="out_min">-255</rosparam>
		 <rosparam param="out_max">255</rosparam>
		 <rosparam param="rate">7.0</rosparam>
		 <rosparam param="timeout_ticks">4</rosparam>
		 <rosparam param="rolling_pts">5</rosparam>
	</node>



<node pkg="differential_drive" type="trial.py" name="subscriber">
  </node>	
<node pkg="differential_drive" type="goal_e_caller.py" name="goalE_caller">
  </node>	
<node pkg="differential_drive" type="goal_c_caller.py" name="goalC_caller">
  </node>

<node pkg="differential_drive" type="initial_publisher.py" name="sub">
  </node>
<node pkg="simple_navigation_goals" type="simple_navigation_goals" name="simple_navigation_goals">

  </node>










	
</launch> 
