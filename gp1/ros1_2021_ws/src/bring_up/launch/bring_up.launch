<launch>
 
	<!--Launch rosserial node for odometry data-->
	<node pkg="bring_up" type="serial_node1.py" name="ODOM_Node" output="screen">
		<param name="port" value="/dev/ttyUSB0"/>
		<param name="baud" value="57600"/>
	</node>

	<!--Launch rosserial node  for imu data-->
  <node pkg="mpu6050_serial_to_imu" type="mpu6050_serial_to_imu_node" name="mpu6050_serial_to_imu_node" required="true">
    <param name="port" value="/dev/ttyACM0"/>
		<param name="tf_parent_frame_id" value="base_link"/>
		<param name="tf_frame_id" value="imu_link"/>
		<param name="frame_id" value="imu_link"/>
		<param name="broadcast_tf" value="false"/>
		<param name="linear_acceleration_stddev" value="2.5e-05"/>
		<param name="angular_velocity_stddev" value="2.5e-05"/>
		<param name="orientation_stddev" value="0.0"/>
  </node>

	<!--Static Transformation Publisher-->
	<node pkg="tf" type="static_transform_publisher" name="lidar_tf" args="0.045 -0.145 0.195 0 0 0 base_link lidar_link 100" />

<!-- Launch the LiDAR node -->

 <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	  <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>
	  <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
	  <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
	  <param name="frame_id"            type="string" value="lidar_link"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
 </node>

	<include file="$(find mybot_ros_control)/launch/velocity_controller.launch"/>
	<include file="$(find new_pid)/launch/motion_control.launch"/>

</launch>
